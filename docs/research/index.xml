<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RESEARCH on The Engineer Blogs</title>
    <link>https://dangpham112000.github.io/docs/research/</link>
    <description>Recent content in RESEARCH on The Engineer Blogs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Oct 2024 01:47:46 +0700</lastBuildDate>
    <atom:link href="https://dangpham112000.github.io/docs/research/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Process vs Thread</title>
      <link>https://dangpham112000.github.io/docs/research/process_vs_thread/</link>
      <pubDate>Tue, 05 Dec 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/process_vs_thread/</guid>
      <description>&lt;h1 id=&#34;process-vs-thread&#34;&gt;&#xA;  Process vs Thread&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#process-vs-thread&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;program&#34;&gt;&#xA;  Program&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#program&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;Program&lt;/strong&gt; is an executable file containing a set of instructions and passively stored on disk&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/process_vs_thread/program.png&#34; alt=&#34;program&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;process&#34;&gt;&#xA;  Process&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#process&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;Process&lt;/strong&gt; means a program is in execution. When a program is loaded into the memory and becomes active, the program becomes a process or processes&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/process_vs_thread/process.png&#34; alt=&#34;process&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;thread&#34;&gt;&#xA;  Thread&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#thread&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;Thread&lt;/strong&gt; is the smallest unit of execution within a process&lt;/p&gt;</description>
    </item>
    <item>
      <title>Chrome Architecture</title>
      <link>https://dangpham112000.github.io/docs/research/chrome_architecture/</link>
      <pubDate>Tue, 05 Dec 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/chrome_architecture/</guid>
      <description>&lt;h1 id=&#34;chrome-architecture&#34;&gt;&#xA;  Chrome Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chrome-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Read &lt;a href=&#34;../process_vs_thread&#34;&gt;process vs thread&lt;/a&gt; first if you don&amp;rsquo;t have any process and thread concept in your mind&lt;/p&gt;&#xA;&lt;h2 id=&#34;browser-architecture&#34;&gt;&#xA;  Browser Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#browser-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;When you start an application, a process is created. The program might create thread(s) to help it do work, but that&amp;rsquo;s optional. The Operating System gives the process a &amp;ldquo;slab&amp;rdquo; of memory to work with and all application state is kept in that private memory space. When you close the application, the process also goes away and the Operating System frees up the memory&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Overview</title>
      <link>https://dangpham112000.github.io/docs/research/aws_overview/</link>
      <pubDate>Wed, 15 Nov 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/aws_overview/</guid>
      <description>&lt;h1 id=&#34;aws-overview&#34;&gt;&#xA;  AWS Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#aws-overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;slidehttpsmediadatacumuluscomaws-ccpaws20certified20cloud20practitioner20slides20v24pdf_gl130glds_gamte3oty1nzc3ms4xnzaxotkzmtc4_ga_6gzztggx7hmtcwmtk5mze3oc4xljaumtcwmtk5mze3oc42mc4wlja&#34;&gt;&#xA;  &lt;a href=&#34;https://media.datacumulus.com/aws-ccp/AWS%20Certified%20Cloud%20Practitioner%20Slides%20v24.pdf?_gl=1*30glds*_ga*MTE3OTY1Nzc3MS4xNzAxOTkzMTc4*_ga_6GZZTGGX7H*MTcwMTk5MzE3OC4xLjAuMTcwMTk5MzE3OC42MC4wLjA.&#34;&gt;Slide&lt;/a&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#slidehttpsmediadatacumuluscomaws-ccpaws20certified20cloud20practitioner20slides20v24pdf_gl130glds_gamte3oty1nzc3ms4xnzaxotkzmtc4_ga_6gzztggx7hmtcwmtk5mze3oc4xljaumtcwmtk5mze3oc42mc4wlja&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;types-of-cloud-computing&#34;&gt;&#xA;  Types of Cloud Computing&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types-of-cloud-computing&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/aws_overview/cloud_computing_types.png&#34; alt=&#34;cloud_computing_types&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;ec2---elastic-compute-cloud&#34;&gt;&#xA;  EC2 - Elastic Compute Cloud&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ec2---elastic-compute-cloud&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;EC2 = Infrastructure as a Service (IaaS)&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;On-Demand Instances&lt;/strong&gt; – short workload, predictable pricing, pay by second&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Has the highest cost&lt;/li&gt;&#xA;&lt;li&gt;Recommended for short-term and un-interrupted workloads, where you can&amp;rsquo;t predict how the application will behave&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reserved&lt;/strong&gt; (1 &amp;amp; 3 years)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Reserved Instances&lt;/strong&gt; – long workloads&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Recommended for steady-state usage applications (think database)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Convertible Reserved Instances&lt;/strong&gt; – long workloads with flexible instances&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Savings Plans (1 &amp;amp; 3 years)&lt;/strong&gt; – commitment to an amount of usage, long workload&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Spot Instances&lt;/strong&gt; – short workloads, cheap, can lose instances (less reliable)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The MOST cost-efficient&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dedicated Hosts&lt;/strong&gt; – book an entire physical server, control instance placement&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The most expensive option&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Dedicated Instances&lt;/strong&gt; – no other customers will share your hardware&#xA;&lt;ul&gt;&#xA;&lt;li&gt;No control over instance placement&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Capacity Reservations&lt;/strong&gt; – reserve capacity in a specific AZ for any duration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ami---amazon-machine-image&#34;&gt;&#xA;  AMI - Amazon Machine Image&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ami---amazon-machine-image&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;AMI are a &lt;strong&gt;customization&lt;/strong&gt; of an EC2 instance&lt;/li&gt;&#xA;&lt;li&gt;AMI are built for a &lt;strong&gt;specific region&lt;/strong&gt; (and can be copied across regions)&lt;/li&gt;&#xA;&lt;li&gt;You can launch EC2 instances from:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;A Public AMI&lt;/strong&gt;: AWS provided&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Your own AMI&lt;/strong&gt;: you make and maintain them yourself&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;An AWS Marketplace AMI&lt;/strong&gt;: an AMI someone else made (and potentially sells)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/aws_overview/ami.png&#34; alt=&#34;ami&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Encryption - Draft</title>
      <link>https://dangpham112000.github.io/docs/research/encryption/</link>
      <pubDate>Wed, 15 Nov 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/encryption/</guid>
      <description>&lt;h1 id=&#34;encryption&#34;&gt;&#xA;  Encryption&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#encryption&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;hash&#34;&gt;&#xA;  Hash&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hash&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Note: An 8-bit byte is represented as 2 characters, from 00 to FF, in hexadecimal&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;collision&#34;&gt;&#xA;  Collision&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#collision&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;use-case&#34;&gt;&#xA;  Use case&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#use-case&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Checking file integrity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;hmac&#34;&gt;&#xA;  HMAC&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hmac&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;HMAC stand for &lt;strong&gt;H&lt;/strong&gt;ash-Based &lt;strong&gt;M&lt;/strong&gt;essage &lt;strong&gt;A&lt;/strong&gt;uthentication &lt;strong&gt;C&lt;/strong&gt;odes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;symmetric-encryption&#34;&gt;&#xA;  Symmetric encryption&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#symmetric-encryption&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;uses the same key to encrypt and decrypt messages&lt;/p&gt;&#xA;&lt;p&gt;AES, Twofish and ChaCha20&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/encription/Symmetric.png&#34; alt=&#34;Symmetric&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;demo-code&#34;&gt;&#xA;  Demo code&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#demo-code&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;This example demonstrates symmetric encryption and decryption in NodeJS using the crypto module with AES (Advanced Encryption Standard) in AES-256-CBC mode&lt;/p&gt;</description>
    </item>
    <item>
      <title>Authentication - Draft</title>
      <link>https://dangpham112000.github.io/docs/research/authentication/</link>
      <pubDate>Thu, 17 Oct 2024 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/authentication/</guid>
      <description>&lt;h1 id=&#34;authentication&#34;&gt;&#xA;  Authentication&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#authentication&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cookie---session&#34;&gt;&#xA;  Cookie - Session&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#cookie---session&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;token-base&#34;&gt;&#xA;  Token base&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#token-base&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Basic flow&#xA;&lt;img src=&#34;https://dangpham112000.github.io/research/authentication/basic-flow.png&#34; alt=&#34;basic-flow&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;Token expired&#xA;&lt;img src=&#34;https://dangpham112000.github.io/research/authentication/token-expired.png&#34; alt=&#34;token-expired&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;access-token&#34;&gt;&#xA;  Access Token&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#access-token&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h4 id=&#34;pros&#34;&gt;&#xA;  Pros&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#pros&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h4&gt;&#xA;&lt;p&gt;Do you notice some web page allow you go to a route like dashboard immediately just because you has been login before, but some other web app also have dashboard but they request you login every time you go to them&lt;/p&gt;&#xA;&lt;p&gt;&amp;ndash;&amp;gt; Bad UX&lt;/p&gt;&#xA;&lt;p&gt;If we use AT, they do not need re-login&lt;/p&gt;</description>
    </item>
    <item>
      <title>Event loop - Draft</title>
      <link>https://dangpham112000.github.io/docs/research/event_loop/</link>
      <pubDate>Tue, 05 Dec 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/event_loop/</guid>
      <description>&lt;h1 id=&#34;event-loop&#34;&gt;&#xA;  Event loop&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#event-loop&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;challenge&#34;&gt;&#xA;  Challenge&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#challenge&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Can you guess the output of the below JS code&lt;/p&gt;&#xA;&lt;div class=&#34;book-columns flex flex-wrap&#34;&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;!-- raw HTML omitted --&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JS&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;execLater&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;setTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;printName&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Promise&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;resolve&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .&lt;span style=&#34;color:#a6e22e&#34;&gt;then&lt;/span&gt;(() =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Promise resolve&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TS&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;printName&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printName&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;execLater&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;  &lt;div class=&#34;flex-even markdown-inner&#34;&gt;&#xA;    &lt;p&gt;Phase 1: the memory creation phase&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;name&lt;/code&gt; is declared and initialized equal &lt;code&gt;&amp;quot;JS&amp;quot;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;execLater&lt;/code&gt; is declared and initialized&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;printName&lt;/code&gt; is declared and initialized&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Phase 2: the code execution phase&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scale - draft</title>
      <link>https://dangpham112000.github.io/docs/research/scale/</link>
      <pubDate>Thu, 18 Apr 2024 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/scale/</guid>
      <description>&lt;h1 id=&#34;scale&#34;&gt;&#xA;  Scale&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#scale&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;monolith-architecture&#34;&gt;&#xA;  Monolith architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#monolith-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The server in itself is capable and responsible for all the tasks that have to be performed and can perform every step needed to perform a function&lt;/li&gt;&#xA;&lt;li&gt;Tasks: Authorization, Presentation, Database, Business&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;server-side-rendering-ssr&#34;&gt;&#xA;  Server side rendering (SSR)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#server-side-rendering-ssr&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/scale/SSR.png&#34; alt=&#34;SSR&#34; /&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;splitting-server&#34;&gt;&#xA;  Splitting server&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#splitting-server&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;database-splitting&#34;&gt;&#xA;  Database splitting&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#database-splitting&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/scale/database_splitting.png&#34; alt=&#34;database_splitting&#34; /&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Assume your app have a stable traffic&lt;/li&gt;&#xA;&lt;li&gt;Your data is not maintain steady, it always grows up. So database is the first thing we need to splitting out from our server and be standalone&lt;/li&gt;&#xA;&lt;li&gt;For later you will need to upgrade your DB (whatever scale out or scale up)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;client-splitting--client-side-rendering-csr&#34;&gt;&#xA;  Client splitting &amp;amp;&amp;amp; Client side rendering (CSR)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#client-splitting--client-side-rendering-csr&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://dangpham112000.github.io/research/scale/CSR.png&#34; alt=&#34;CSR&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Social Media - Draft</title>
      <link>https://dangpham112000.github.io/docs/research/social_media/</link>
      <pubDate>Tue, 05 Dec 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/social_media/</guid>
      <description>&lt;h1 id=&#34;social-media-fakebutsite&#34;&gt;&#xA;  Social Media: fakebut.site&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#social-media-fakebutsite&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;architecture&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Frontend: Vite-ReactJS, Argon (Consider replace with TaiwinCSS)&lt;/li&gt;&#xA;&lt;li&gt;Backend: ExpressJS, Golang, MongoDB&lt;/li&gt;&#xA;&lt;li&gt;Ops: Git Action, Docker, EC2&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;login&#34;&gt;&#xA;  Login&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#login&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Front: Login/Register page&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://vitejs.dev/guide/#scaffolding-your-first-vite-project&#34;&gt;Setup Vite&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Routing handling&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Back: API login/register&lt;/li&gt;&#xA;&lt;li&gt;Cookie base&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Consider the possibility?&lt;/li&gt;&#xA;&lt;li&gt;Because the strickly of cookie when work with cross-origin (front-end origin vs backend origin)&lt;/li&gt;&#xA;&lt;li&gt;Solution: using the nginx to become the gateway to serve backend api and frontend site&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Token base&lt;/li&gt;&#xA;&lt;li&gt;SSO&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;chat&#34;&gt;&#xA;  Chat&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#chat&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Websocket&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;post&#34;&gt;&#xA;  Post&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#post&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;comment&#34;&gt;&#xA;  Comment&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#comment&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;notification&#34;&gt;&#xA;  Notification&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#notification&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;h3 id=&#34;admin-management&#34;&gt;&#xA;  Admin management&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#admin-management&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;</description>
    </item>
  </channel>
</rss>
