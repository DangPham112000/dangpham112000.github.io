<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on The Engineer Blogs</title>
    <link>https://dangpham112000.github.io/</link>
    <description>Recent content in Introduction on The Engineer Blogs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Nov 2023 01:47:46 +0700</lastBuildDate>
    <atom:link href="https://dangpham112000.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Backend Protocol</title>
      <link>https://dangpham112000.github.io/docs/research/be_protocol/</link>
      <pubDate>Wed, 15 Nov 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/research/be_protocol/</guid>
      <description>Backend Protocol#What is a protocol?#A system that allows two parties to communicate A protocol is designed with a set of properties Depending on the purpose of the protocol TCP, UDP, HTTP, gRPC, FTP The application protocols (HTTP/1.1, HTTP/2, HTTP/3) run on top of transport protocols (TCP, UDP) Protocol properties#Data format Text based (plain text, JSON, XML) Binary (protobuf, RESP, h2, h3) Transfer mode Message based (UDP, HTTaP) Stream (TCP, WebRTC) Addressing system DNS name, IP, MAC Directionality Bidirectional (TCP) Unidirectional (HTTP) Full/Half duplex State Stateful (TCP, gRPC, apache thrift) Stateless (UDP, HTTP) Routing Proxies, Gateways Flow &amp;amp; Congestion control TCP (Flow &amp;amp; Congestion) UDP (No control) Error management Error code Retries and timeouts Why do we need a communication model?</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://dangpham112000.github.io/docs/tips/git/</link>
      <pubDate>Wed, 15 Nov 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/tips/git/</guid>
      <description>GIT TIPS#Terminology#HEAD: your current local working branch origin: the address to your remote git, represent for remote repo tracked file: the file git already had before, so when you edit it, git know this file is modified (M files)
untracked, new file: the file recently add and git donâ€™t know anything about it (U files)
Commit#git add . git commit -m &amp;#34;commit message&amp;#34; These 2 commands can combie into 1</description>
    </item>
    <item>
      <title>Knight Dialer</title>
      <link>https://dangpham112000.github.io/docs/problems/knight_dialer/</link>
      <pubDate>Wed, 15 Nov 2023 01:47:46 +0700</pubDate>
      <guid>https://dangpham112000.github.io/docs/problems/knight_dialer/</guid>
      <description>Knight dialer#Description#The chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L). The possible movements of chess knight are shown in this diagaram:
A chess knight can move as indicated in the chess diagram below: We have a chess knight and a phone pad as shown below, the knight can only stand on a numeric cell (i.</description>
    </item>
    <item>
      <title></title>
      <link>https://dangpham112000.github.io/books/test3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://dangpham112000.github.io/books/test3/</guid>
      <description>4th Level of Menu#Caesorum illa tu sentit micat vestes papyriferi#Inde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.
Venasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto!</description>
    </item>
  </channel>
</rss>
