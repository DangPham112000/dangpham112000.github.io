[{"id":0,"href":"/docs/tips/git/","title":"Git","section":"TIPS","content":"\rGIT TIPS\r#\rTerminology\r#\rHEAD: your current local working branch origin: the address to your remote git, represent for remote repo tracked file: the file git already had before, so when you edit it, git know this file is modified (M files)\nuntracked, new file: the file recently add and git don’t know anything about it (U files)\nCommit\r#\rgit add . git commit -m \u0026#34;commit message\u0026#34; These 2 commands can combie into 1\ngit commit -am \u0026#34;commit message\u0026#34; Note: this only work with tracked files\nChange previous commit message\r#\rCommit amend\r#\rgit commit --amend -m \u0026#34;new message to replace the previous message\u0026#34; Note: this amend can also simplify by amen :))))\nRebase reword\r#\rgit rebase -i HEAD~1 Vim IDE appear and show a latest commit\rtype i to begin insert mode, ready to modify change pick to r or reword → means you will change this commit message press ESC key to end insert mode type :wq to save new Vim IDE appear to let you change the commit message change and save like the early steps git push -f Opps! Code on wrong branch\r#\rStash\r#\rgit stash git checkout correct-branch git stash pop Note: git stash will only bring the changes on tracked files to store but don\u0026rsquo;t worry when checkout to other branch, the untracked files will move to there also\nOpps! Commit into local main branch\r#\rReset\r#\rSolution 1: Erase the current commit and go back to the earlier commit\ngit reset --hard HEAD~1 Solution 2: Bring the current commit to staged change and go back to the earlier commit\ngit reset --soft HEAD~1 Update the outdated feature branch\r#\rRelocate branch: rebase\r#\rbefore rebase\n==\u0026gt; after rebase\ngit checkout master git pull git rebase master topic git push -f Note: topic branch will have code from F and G of main branch, but if it conflicts with topic branch, the solution will be the same here\nPull origin\r#\rCollect code from master to feature branch. Feature branch in this example is topic branch\ngit checkout master git pull git checkout topic git pull origin master Note: never ever tried it yet\nClean up messy commits\r#\rAccumulate commits: rebase fixup\r#\rIf you have 3 messy commits per 4 commits on your feature branch\ngit rebase -i HEAD~4 Vim IDE appear and show 4 latest commits\rType i to change into insert mode Change pick to f or fixup → means you accumulate this 3 commits Out insert mode with ESC key Type :wq to save\ngit push -f before after Note: the present commit will have all changes from 3 previous commits\nDelete all local branches except main branch\r#\rgit branch | grep -v \u0026#34;main\u0026#34; | xargs git branch -D Explain:\nGet all branches (except for the main) via git branch | grep -v \u0026ldquo;main\u0026rdquo; command Select every branch with xargs command Delete branch with xargs git branch -D Refresh outdated local branch\r#\rIf you pull but show some warnings or errors and git show a recommend that is need to type some rebase commands Just checkout to another branch, delete your local conflict branch and then checkout to this branch again to download a latest one in remote repo git checkout dev git branch -D feature-branch git fetch git checkout feature-branch Force pull\r#\rgit pull -f Note: never ever tried it yet\nMerge PR but get stuck in conflict\r#\rRelocate branch: rebase\r#\rgit checkout main git pull checkout feature-branch git rebase main feature-branch Conflict appears in IDE\n→ Resolve conflict and save file\rgit add . git rebase --continue Vim IDE appear to make you confirm change\n→ :wq\rgit push -f Log pretty\r#\rgit log --graph --decorate --oneline or\ngit log --graph --decorate Config\r#\rShow current global credential\r#\rgit config --global --list Configure local repo’s credential\r#\rwhen you want it’s different with the global one\ngit config user.name DangPham112000 git config user.email dangpham112000@gmail.com Switch git user tool\r#\rhttps://github.com/geongeorge/Git-User-Switch\n"},{"id":1,"href":"/docs/problems/knight-dialer/","title":"Knight Dialer","section":"PROBLEMS","content":"\rKnight dialer\r#\rDescription\r#\rThe chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L). The possible movements of chess knight are shown in this diagaram:\nA chess knight can move as indicated in the chess diagram below: We have a chess knight and a phone pad as shown below, the knight can only stand on a numeric cell (i.e. blue cell). Given an integer n, return how many distinct phone numbers of length n we can dial.\nYou are allowed to place the knight on any numeric cell initially\nand then you should perform n - 1 jumps to dial a number of length n. All jumps should be valid knight jumps.\nAs the answer may be very large, return the answer modulo \\(10^9 \u0026#43; 7\\)\rExample 1:\nInput: n = 1\nOutput: 10\nExplanation: We need to dial a number of length 1, so placing the knight over any numeric cell of the 10 cells is sufficient\nExample 2:\nInput: n = 2\nOutput: 20\nExplanation: All the valid number we can dial are [04, 06, 16, 18, 27, 29, 34, 38, 40, 43, 49, 60, 61, 67, 72, 76, 81, 83, 92, 94]\nExample 3:\nInput: n = 3131\nOutput: 136006598\nExplanation: Please take care of the mod\nConstraints:\n1 \u0026lt;= n \u0026lt;= 5000 Solution\r#\rTBU\nReference\r#\rLeetcode "},{"id":2,"href":"/books/test3/","title":"Test3","section":"Books","content":"\r4th Level of Menu\r#\rCaesorum illa tu sentit micat vestes papyriferi\r#\rInde aderam facti; Theseus vis de tauri illa peream. Oculos uberaque non regisque vobis cursuque, opus venit quam vulnera. Et maiora necemque, lege modo; gestanda nitidi, vero? Dum ne pectoraque testantur.\nVenasque repulsa Samos qui, exspectatum eram animosque hinc, aut manes, Assyrii. Cupiens auctoribus pariter rubet, profana magni super nocens. Vos ius sibilat inpar turba visae iusto! Sedes ante dum superest extrema.\n"}]